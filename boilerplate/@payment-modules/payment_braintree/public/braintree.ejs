<div class="container content-box-large">
    <h1>##&en PAYMENT-BRAINTREE ##&hu FIZETÉS-BRAINTREE ##</h1>
    <div class="panel-heading">
        <div class="panel-title"></div>
    </div>
    <div class="panel-body">
        <table class="table">
            <thead>
                <tr>
                    <th>##&en Quantity ##&hu Mennyiség ##</th>
                    <th>##&en Item name ##&hu Megnevezés ##</th>
                    <th>##&en Descrition ##&hu leírás ##</th>
                    <th>##&en Netto Unit Price ##&hu Nettó egységár ##</th>
                    <th>##&en VAT ##&hu ÁFA ##</th>
                    <th>##&en Brutto Total ##&hu Bruttó összesen ##</th>
                </tr>
            </thead>
            <tbody>


                <% for(var i=0; i < p.items.length; i++) {%>
                    <tr>
                        <td>
                            <%= p.items[i].qty %>
                                <%= p.items[i].unit %>
                        </td>
                        <td>
                            <%= p.items[i].name %>
                        </td>
                        <td>
                            <%= p.items[i].info %>
                        </td>
                        <td>
                            <%= currency(p.items[i].net, p.currency, lang) %>
                        </td>
                        <td>
                            <%= p.items[i].vat %>%
                        </td>
                        <td>
                            <%= currency(p.items[i].brutto_sum, p.currency, lang) %>
                        </td>
                    </tr>
                    <% } %>
            </tbody>
        </table>
    </div>

    <div class="panel-body">
        <table class="table">
            <thead>
                <tr>
                    <th>##&en TOTAL netto ##&hu ÖSSZESEN netto ##</th>
                    <th>##&en TOTAL vat ##&hu Áfa összesen ##</th>
                    <th>##&en TOTAL payment ##&hu Összesen fizetendő ##</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <%- currency(p.netto, p.currency, lang) %>
                    </td>
                    <td>
                        <%- currency(p.vatsum, p.currency, lang) %>
                    </td>
                    <td>
                        <b><%- currency(p.brutto, p.currency, lang) %></b>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <div id="checkout-message"></div>

    <div class="panel-body">
        <script src="https://js.braintreegateway.com/web/dropin/1.9.4/js/dropin.min.js"></script>

        <div id="dropin-container"></div>
        // 4111111111111111, 09/20, 400
        <br>
        <button id="braintree-submit" class="btn btn-primary">##&en Payment via creditcard. ##&hu Fizetés bankkártyával ##</button>
        <script>
            var token = '<%= braintree_token %>';

            var braintree_submit = document.querySelector('#braintree-submit');
            braintree_submit.setAttribute('disabled', true);

            if (token !== '') {



                $('#checkout-message').html('<h2>##&en Choose a payment method ##&hu Válasszon fizetései metódust ##</h2>');

                var payload = {};

                var translations_hu = {
                    payingWith: 'Fizetés {{paymentSource}} használatával',
                    chooseAnotherWayToPay: 'Válasszon másik fizetési módot',
                    chooseAWayToPay: 'Válasszon fizetési módot',
                    otherWaysToPay: 'Más fizetési módok',
                    cardVerification: 'Kártya-megerősítés',

                    fieldEmptyForCvv: 'Adja meg a CVV számot.',
                    fieldEmptyForExpirationDate: 'Adja meg a lejárati-dátumot.',
                    fieldEmptyForCardholderName: 'Adja meg a kártyatulajdonos nevét.',
                    fieldEmptyForNumber: 'Adjon meg egy kártyaszmot.',
                    fieldEmptyForPostalCode: 'Adja meg az irányítószámot.',
                    fieldInvalidForCvv: 'Ez a biztnsági kód nem érvényes.',
                    fieldInvalidForExpirationDate: 'Ez a lejárati dátum nem érvényes.',
                    fieldInvalidForNumber: 'Ez a kártyaszám nem érvényes.',
                    fieldInvalidForPostalCode: 'Ez az irányítószám nem érvényes.',
                    fieldTooLongForCardholderName: 'A kártyatulajdonos neve kevesebb mint 256 karakter.',
                    genericError: 'valami hiba történt a kiszolgáló oldalán.',
                    hostedFieldsFailedTokenizationError: 'Kérjük ellenőrizze a megadott adatokat, majd próbállja újra.',
                    hostedFieldsTokenizationCvvVerificationFailedError: 'Kártyaellenőrzés sikertelen, kérjük ellenőrizze és próbálja újra.',
                    hostedFieldsTokenizationNetworkErrorError: 'Hálózati hiba, kérjük próbálja újra.',
                    hostedFieldsFieldsInvalidError: 'Kérjük ellenőrizze a mezőket, és próbállja újra.',
                    paypalAccountTokenizationFailedError: 'Probléma merült fel, így nem sikerült a PayPal fiók létrehozása, kérjük próbállja újra.',
                    paypalFlowFailedError: 'Probléma merült fel, így nem sikerült a PayPal fiókhoz való csatlakozás, kérjük próbállja újra.',
                    paypalTokenizationRequestActiveError: 'A PayPal hitelesítés már folyamatban van.',
                    applePayTokenizationError: 'Hálózati hiba merült fel, így nem sikerült az Apple-Pay fizetés lebonyolítása, kérjük próbállja újra.',
                    applePayActiveCardError: 'Adjon bankkártyát Apple-Pay fiókjához.',
                    unsupportedCardTypeError: 'Ez a kártyatípus nem támogatott, kérjük adjon meg egy másikat.',

                    cardholderNameLabel: 'Kártyatulajdonos neve',
                    cardNumberLabel: 'Kártyaszám',
                    cvvLabel: 'CVV',
                    cvvThreeDigitLabelSubheading: '(3 számjegy)',
                    cvvFourDigitLabelSubheading: '(4 számjegy)',
                    expirationDateLabel: 'Érvényesség lejárata',
                    expirationDateLabelSubheading: '(HH/ÉÉ)',
                    cardholderNamePlaceholder: 'Kártyatulajdonos',
                    expirationDatePlaceholder: 'HH/ÉÉ',
                    postalCodeLabel: 'Irányítószám',
                    payWithCard: 'Fizetés bankkártyával',

                    endingIn: 'Végződése ••{{lastTwoCardDigits}}',
                    Card: 'Bankkártya',
                    PayPal: 'PayPal',
                    'PayPal Credit': 'PayPal Credit',
                    'Apple Pay': 'Apple Pay',
                    'American Express': 'American Express',
                    Discover: 'Discover',
                    'Diners Club': 'Diners Club',
                    MasterCard: 'MasterCard',
                    Visa: 'Visa',
                    JCB: 'JCB',
                    Maestro: 'Maestro',
                    UnionPay: 'UnionPay'
                }

                var opt = {
                    paypal: {
                        flow: 'checkout',
                        amount: 10.00,
                        currency: 'HUF',
                        buttonStyle: {
                            color: 'blue',
                            shape: 'rect',
                            size: 'medium'
                        }
                    },
                    authorization: token,
                    container: '#dropin-container',
                }

                if ("<%= lang %>" === "HU") opt.translations = translations_hu;

                braintree.dropin.create(opt, function(err, dropinInstance) {
                    braintree_submit.addEventListener('click', function() {
                        console.log("click");
                        dropinInstance.requestPaymentMethod(function(requestPaymentMethodErr, payload) {
                            $.ajax({
                                type: 'POST',
                                url: '/braintree-payment',
                                data: {
                                    'paymentMethodNonce': payload.nonce
                                }
                            }).done(function(result) {
                                if (result.success) {
                                    $('#checkout-message').html('<h2>##&en Success ##&hu Siker ##</h2><p>##&en Payment complete. ##&hu A fizetés sikeresen lezajlott. ##</p>');
                                    dropinInstance.teardown(function(teardownErr) {
                                        if (teardownErr) {
                                            console.error('Could not tear down Drop-in UI!');
                                        } else {
                                            // Remove the accordion
                                            $('#payment-accordion').remove();
                                            $('#braintree-submit').remove();
                                            window.location.hash = '#invoices';
                                        }
                                    });
                                } else {
                                    console.log(result);
                                    $('#checkout-message').html('<h2>##&en Error ##&hu Hiba ##</h2><p>##&en Payment failed ##&hu Sikertelen fizetés ##</p>');
                                }
                            });

                        });

                    });
                    if (dropinInstance.isPaymentMethodRequestable()) {
                        // This will be true if you generated the client token 
                        // with a customer ID and there is a saved payment method   
                        // available to tokenize with that customer.    
                        braintree_submit.removeAttribute('disabled');
                    }
                    dropinInstance.on('paymentMethodRequestable', function(event) {
                        console.log(event.type); // The type of Payment Method, e.g 'CreditCard', 'PayPalAccount'.   
                        console.log(event.paymentMethodIsSelected); // true if a customer has selected a payment method when paymentMethodRequestable fires  
                        braintree_submit.removeAttribute('disabled');
                    });
                    dropinInstance.on('noPaymentMethodRequestable', function() {
                        braintree_submit.setAttribute('disabled', true);
                    });
                });
            }
        </script>
    </div>
</div>
